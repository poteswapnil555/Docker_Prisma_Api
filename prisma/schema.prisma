generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String               @id @default(uuid())
  email                 String               @unique
  name                  String?              @db.VarChar(10)
  age                   Int?
  isActive              Boolean              @default(true)
  notificationMethods   NotificationMethods?
  blog                  Bytes?
  interests             String[]
  role                  UserRole?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  cuidID                String?              @default(cuid())
  uuidID                String?              @default(uuid())
  nanoidID              String?              @default(nanoid())
  ulidID                String?              @default(ulid())
  blogs                 Blog[]
  notificationMethodsId String?
}

model NotificationMethods {
  id     String  @id @default(uuid())
  phone  Boolean
  email  Boolean
  userId String  @unique
  user   User?   @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}

model Video {
  id        String   @id @default(uuid())
  title     String   @db.Text
  url_720p  String   @map("720p")
  url_1080p String   @map("1080p")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id         String     @id @default(uuid())
  title      String     @db.VarChar(255)
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  User       User?      @relation(fields: [userId], references: [id])
  userId     String
  categories Category[]
}

model Category {
  id    String  @id @default(uuid())
  name  String? @db.VarChar(255)
  blogs Blog[]
}
